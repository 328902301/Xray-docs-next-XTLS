import{r as a,o as n,c as e,a as s,b as o,w as t,F as c,d as p,e as l}from"./app.1bf2822d.js";const r={},i=p('<h1 id="fakedns" tabindex="-1"><a class="header-anchor" href="#fakedns" aria-hidden="true">#</a> FakeDNS</h1><p>FakeDNS 通过伪造 DNS 以获取目标域名，能够降低 DNS 查询时的延迟、配合透明代理获取目标域名。</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>FakeDNS 有可能会污染本地 DNS，导致 Xray 关闭后“无法访问网络”。</p></div><h2 id="fakednsobject" tabindex="-1"><a class="header-anchor" href="#fakednsobject" aria-hidden="true">#</a> FakeDNSObject</h2><p><code>FakeDNSObject</code> 对应配置文件的 <code>fakedns</code> 项。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;ipPool&quot;</span><span class="token operator">:</span> <span class="token string">&quot;198.18.0.0/16&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;poolSize&quot;</span><span class="token operator">:</span> <span class="token number">65535</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p><code>ipPool</code>: CIDR</p></blockquote><p>FakeDNS 将使用此选项指定的 IP 块分配地址。</p><blockquote><p><code>poolSize</code>: int</p></blockquote><p>指定 FakeDNS 储存的 域名-IP 映射的最大数目。当映射数超过此值后，会按照 LRU 规则淘汰映射。默认为 65535。</p><h3 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使用？</h3>',11),d=l("FakeDNS 本质上是一个 "),u=l("DNS 服务器"),k=l("，能够与任意 DNS 规则配合使用。"),b=s("div",{class:"custom-container tip"},[s("p",{class:"custom-container-title"},"TIP"),s("p",null,"只有将 DNS 查询路由到 FakeDNS，才能使其发挥作用。")],-1),h=s("p",null,[l("另外，你需要在入站中开启 "),s("code",null,"Sniffing"),l(" ，并使用 "),s("code",null,"fakedns"),l(" 目标地址重置。")],-1),N=s("div",{class:"custom-container warning"},[s("p",{class:"custom-container-title"},"WARNING"),s("p",null,"如果 FakeIP 没有被正确的还原为域名，将无法连接到服务器。")],-1);r.render=function(p,l){const r=a("RouterLink");return n(),e(c,null,[i,s("p",null,[d,o(r,{to:"/en/config/dns.html#serverobject"},{default:t((()=>[u])),_:1}),k]),b,h,N],64)};export default r;
